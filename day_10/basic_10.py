class Zwierze:    def __init__(self, l_konczyn, motion_type, pozywienie, typ_rozmnazania,                 wiek):        self.wiek = wiek        self.limbs_no = l_konczyn        self.motion_type = motion_type        self.food = pozywienie        self.fertilization = typ_rozmnazania        self.__foo = 0    def hello(self):        return 'zwierze'class Czlowiek(Zwierze):    def __init__(self, rasa, wiek, *, l_konczyn=4, motion_type='chodzacy',                 pozywienie='wszystko', typ_rozmnazania='zyworodny'):        self.__typ_rozmnazania = 'zyworodny'        # atrybut ukryty poprzez uzycie '__' na poczatku -> mozna go wywolac        # tylko w tej metodzie        super().__init__(l_konczyn, motion_type, pozywienie, typ_rozmnazania,                         wiek)        # self.limbs_no = limbs_no        # self.motion_type = motion_type        # self.food = food        # self.fertilization = typ_rozmnazania        # !!!super() class call added instead of defining class attributes!!!        self.rasa = rasa    def hello(self):        return 'czlowiek'class Student(Czlowiek):    def __init__(self, rok_studiow, kierunek, wiek, imprezowicz, *,                 rasa='biala'):        super().__init__(rasa, wiek)        self.rok = rok_studiow        self.kierunek = kierunek        self.party = imprezowicz    def hello(self):        return 'student'if __name__ == '__main__':    czlowiek = Czlowiek('biala', 20)    student = Student(3, 'IT', 22, False)    # print(zwierze.limbs_no, zwierze.motion_type, zwierze.foo)    # print(czlowiek.limbs_no, czlowiek.motion_type, czlowiek.rasa)    # print(dir(zwierze))    # print(dir(czlowiek))    zwierze = Zwierze(2, 'latajacy', 'rosliny', 'niezyworodne', 24)    # print(isinstance(student, Zwierze))    # print(isinstance(zwierze, Student))    # print(issubclass(Student, Zwierze))    # print(zwierze.hello())    # print(czlowiek.hello())    # print(student.hello())    # print(zwierze._Zwierze__foo)